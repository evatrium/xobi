const e=e=>"[object Object]"===Object.prototype.toString.call(e),t=(e,t,n)=>Object.defineProperty(e,t,n),n=new Promise(e=>e()),o=e=>Object.keys(e),i=e=>!o(e).length,r=(e,t=!1)=>()=>t||(t=n.then(()=>(e(),t=!1))),$=(t,n)=>(o(n).map(o=>e(t[o])&&e(n[o])?$(t[o],n[o]):t[o]=n[o]),t),a=(e=[],t=(t=>e.splice(e.indexOf(t)>>>0,1)))=>[n=>(e.push(n),()=>t(n)),(...t)=>e.slice().map(e=>e(...t))],c=c=>{let s={},[l,p]=a(),b=r(()=>(!i(s)&&p(o(s)),s={}));const u=(c,p="",[f,h]=a(),g)=>{if(c.$xobi)return c;g={$use:void 0,$connect:void 0,$xobi:{paths:{}},$notify:r(({$xobi:e}=c)=>(!i(e.paths)&&h(o(e.paths)),e.paths={})),$onChange:e=>f(e),$onAnyChange:e=>l(e),$getState:()=>o(c).reduce((t,n)=>"function"!=typeof c[n]?(t[n]=e(c[n])&&c[n].$xobi?c[n].$getState():c[n],t):t,{}),$merge:t=>(e(t)&&$(c,t),n),$select:(e,t={})=>($(t,g),$(t,c),t.$onChange=(t,[n,o]=a(),i,r)=>(i=c.$onAnyChange((t=[])=>[].concat(e).some(e=>t.includes(e))&&o(t)),r=n(t),()=>(i(),r())),t)};for(let e in g)t(c,e,{enumerable:!1,value:g[e]});for(let n in c){let o=c[n],i=p+(p?".":"")+n;e(o)&&u(c[n],i),t(c,n,{enumerable:!0,get:()=>o,set(t){if(t!==o){if("$"===n[0])return o=t;if(e(o)&&o.$xobi&&e(t))return $(c[n],t);o=t,s[i]=c.$xobi.paths[i]=!0,b(),c.$notify()}}})}return c};return u(c)};export{c as xobi};
